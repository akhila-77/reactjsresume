{"version":3,"sources":["akhila.jpg","components/card.js","components/Resume.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Cards","cardsData","data","details","console","log","images","logo","logo1","className","map","values","index","key","src","card","name","href","email","mobile","description","to","pathname","personcard","id","Resume","props","profile","location","akhila","alt","careerobjective","info1","border","ed1","institute","degree","passoutyear","percentage","ed2","ed3","tech1","title","info","tech2","tech3","App","exact","path","component","resume","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,yOC+B5BC,EA1BL,WACT,IAAIC,EAAUC,EAAKC,QACnBC,QAAQC,IAAIJ,GACZ,IAAIK,EAAO,CAACC,IAAKC,KACjB,OACC,6BACA,wBAAIC,UAAU,gBAAd,SACA,yBAAKA,UAAU,OAEdR,EAAUS,KAAI,SAACC,EAAOC,GAAR,OACd,yBAAKH,UAAU,8BAA8BI,IAAKD,GAClD,yBAAKH,UAAU,QACf,yBAAKK,IAAKR,EAAOM,KACjB,4BAAKD,EAAOI,KAAKC,MACjB,uBAAGC,KAAM,UAAUN,EAAOI,KAAKG,OAAO,4BAAKP,EAAOI,KAAKG,QACvD,4BAAKP,EAAOI,KAAKI,QACjB,4BAAKR,EAAOI,KAAKK,aACjB,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,UAAUC,WAAW,CAACC,GAAGZ,IAASH,UAAU,mBAAjE,oB,wBCiDYgB,MAlEf,SAAgBC,GACf,IAAIC,EAAQzB,EAAKC,QAAQuB,EAAME,SAASL,WAAWC,IAEnD,OADApB,QAAQC,IAAIsB,GAEX,6BAASlB,UAAU,eACnB,6BAASA,UAAU,YACnB,yBAAKK,IAAKe,IAAQC,IAAI,SAASrB,UAAU,YACzC,yBAAKA,UAAU,WACf,4BAAKkB,EAAQZ,KAAKC,MAClB,4BAAKW,EAAQZ,KAAKG,OAClB,4BAAKS,EAAQZ,KAAKI,QAClB,6BACA,sDAGA,6BAASV,UAAU,YACnB,wBAAIA,UAAU,WAAd,qBACA,4BAAKkB,EAAQI,gBAAgBC,OAC7B,6BACA,wBAAIvB,UAAU,WAAd,6BACA,yBAAKA,UAAU,OACf,2BAAOwB,OAAO,KACd,4BACA,yCACA,sCACA,2CACA,2CAEA,4BACA,4BAAKN,EAAQO,IAAIC,WACjB,4BAAKR,EAAQO,IAAIE,QACjB,4BAAKT,EAAQO,IAAIG,aACjB,4BAAKV,EAAQO,IAAII,aAEjB,4BACA,4BAAKX,EAAQY,IAAIJ,WACjB,4BAAKR,EAAQY,IAAIH,QACjB,4BAAKT,EAAQY,IAAIF,aACjB,4BAAKV,EAAQY,IAAID,aAEjB,4BACA,4BAAKX,EAAQa,IAAIL,WACjB,4BAAKR,EAAQa,IAAIJ,QACjB,4BAAKT,EAAQa,IAAIH,aACjB,4BAAKV,EAAQa,IAAIF,eAIjB,6BACA,wBAAI7B,UAAU,WAAd,qBACA,4BAAKkB,EAAQc,MAAMC,OACnB,4BACA,4BAAKf,EAAQc,MAAME,OAEnB,4BAAKhB,EAAQiB,MAAMF,OACnB,4BACA,4BAAKf,EAAQiB,MAAMD,OAEnB,4BAAKhB,EAAQkB,MAAMH,OACnB,4BACA,4BAAKf,EAAQkB,MAAMF,UC5CNG,E,uKAXX,OACE,yBAAKrC,UAAU,OACf,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,UAAUC,UAAWC,U,GAN3BC,IAAMC,WCIJC,QACW,cAA7BC,OAAO1B,SAAS2B,UAEe,UAA7BD,OAAO1B,SAAS2B,UAEhBD,OAAO1B,SAAS2B,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjE,QAAQiE,MAAMA,EAAMC,a,kBEzI5BxE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.5181bd46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/akhila.55942c0e.jpg\";","import React from 'react';\r\nimport data from '../data.json';\r\nimport logo from '../logo.svg';\r\nimport logo1 from '../logo.svg';\r\nimport { Link } from 'react-router-dom';\r\nlet Cards=()=>{\r\n\tlet cardsData=data.details;\r\n\tconsole.log(cardsData);\r\n\tlet images=[logo,logo1];\r\n\treturn(\r\n\t\t<div>\r\n\t\t<h1 className=\"text-primary\">cards</h1>\r\n\t\t<div className=\"row\">\r\n\r\n\t\t{cardsData.map((values,index)=>(\r\n\t\t\t<div className=\"col-sm-10 col-md-4 col-lg-4\" key={index}>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t<img src={images[index]}/>\r\n\t\t\t<h1>{values.card.name}</h1>\r\n\t\t\t<a href={\"mailto:\"+values.card.email}><h3>{values.card.email}</h3></a>\r\n\t\t\t<h4>{values.card.mobile}</h4>\r\n\t\t\t<h4>{values.card.description}</h4>\r\n\t\t\t<Link to={{ pathname:\"/resume\",personcard:{id:index}}} className=\"btn btn-primary\">click me</Link>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport data from \"../data.json\";\r\nimport akhila from \"../akhila.jpg\";\r\n\r\n\r\nfunction Resume(props){\r\n\tlet profile=data.details[props.location.personcard.id];\r\n\tconsole.log(profile);\r\n\treturn(\r\n\t\t<section className=\"mainsection\">\r\n\t\t<section className=\"section1\">\r\n\t\t<img src={akhila} alt=\"akhila\" className=\"profile\" />\r\n\t\t<div className=\"imginfo\">\r\n\t\t<h1>{profile.card.name}</h1>\r\n\t\t<h4>{profile.card.email}</h4>\r\n\t\t<h3>{profile.card.mobile}</h3>\r\n\t\t<hr></hr>\r\n\t\t<h5>Guntur,AndhraPradesh</h5>\r\n\t\t</div>\r\n\t\t</section>\r\n\t\t<section className=\"section2\">\r\n\t\t<h1 className=\"heading\">Carrer Objective:</h1>\r\n\t\t<h4>{profile.careerobjective.info1}</h4>\r\n\t\t<br></br>\r\n\t\t<h2 className=\"heading\">Educational Qualification</h2>\r\n\t\t<div className=\"tbl\">\r\n\t\t<table border=\"1\">\r\n\t\t<tr>\r\n\t\t<th>Institute</th>\r\n\t\t<th>Degree</th>\r\n\t\t<th>Passoutyear</th>\r\n\t\t<th>Percentage</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t<td>{profile.ed1.institute}</td>\r\n\t\t<td>{profile.ed1.degree}</td>\r\n\t\t<td>{profile.ed1.passoutyear}</td>\r\n\t\t<td>{profile.ed1.percentage}</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t<td>{profile.ed2.institute}</td>\r\n\t\t<td>{profile.ed2.degree}</td>\r\n\t\t<td>{profile.ed2.passoutyear}</td>\r\n\t\t<td>{profile.ed2.percentage}</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t<td>{profile.ed3.institute}</td>\r\n\t\t<td>{profile.ed3.degree}</td>\r\n\t\t<td>{profile.ed3.passoutyear}</td>\r\n\t\t<td>{profile.ed3.percentage}</td>\r\n\t\t</tr>\r\n\t\t</table>\r\n\t\t</div>\r\n\t\t<br></br>\r\n\t\t<h1 className=\"heading\">Technical Skills:</h1>\r\n\t\t<h2>{profile.tech1.title}</h2>\r\n\t\t<ul>\r\n\t\t<li>{profile.tech1.info}</li>\r\n\t\t</ul>\r\n\t\t<h2>{profile.tech2.title}</h2>\r\n\t\t<ul>\r\n\t\t<li>{profile.tech2.info}</li>\r\n\t\t</ul>\r\n\t\t<h2>{profile.tech3.title}</h2>\r\n\t\t<ul>\r\n\t\t<li>{profile.tech3.info}</li>\r\n\t\t</ul>\r\n\t\t</section>\r\n\t\t</section>\r\n\t\t);\r\n}\r\nexport default Resume;","import React from 'react';\nimport logo from './logo.svg';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Cards from './components/card.js';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport resume from './components/Resume'\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div className=\"App\">\n      <BrowserRouter>\n      <Route exact path=\"/\" component={Cards}/>\n      <Route exact path=\"/resume\" component={resume}/>\n      </BrowserRouter>\n      </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}